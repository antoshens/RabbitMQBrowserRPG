// <auto-generated />
using System;
using BrowserTextRPG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrowserTextRPG.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210512110605_SQLite_Initial")]
    partial class SQLite_Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("BrowserTextRPG.Model.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Agility")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModificationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.Property<int>("charType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 0,
                            Defeats = 0,
                            Fights = 0,
                            Health = 100,
                            Intelligence = 20,
                            Name = "Luke",
                            Strength = 10,
                            UserId = 1,
                            Victories = 0,
                            charType = 0
                        },
                        new
                        {
                            Id = 2,
                            Agility = 0,
                            Defeats = 0,
                            Fights = 0,
                            Health = 100,
                            Intelligence = 50,
                            Name = "Gendalf",
                            Strength = 20,
                            UserId = 1,
                            Victories = 0,
                            charType = 0
                        },
                        new
                        {
                            Id = 3,
                            Agility = 0,
                            Defeats = 0,
                            Fights = 0,
                            Health = 100,
                            Intelligence = 10,
                            Name = "Dart Vader",
                            Strength = 30,
                            UserId = 2,
                            Victories = 0,
                            charType = 0
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        },
                        new
                        {
                            CharacterId = 3,
                            SkillId = 1
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Player"
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 50,
                            Name = "FireBall"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 100,
                            Name = "Blizzard"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 70,
                            Name = "Frenzy"
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Anton",
                            PasswordHash = new byte[] { 186, 122, 249, 45, 81, 194, 96, 245, 196, 146, 116, 254, 122, 32, 131, 81, 232, 75, 151, 58, 151, 143, 219, 105, 101, 29, 101, 5, 122, 123, 228, 13, 77, 39, 228, 104, 91, 229, 247, 80, 254, 249, 182, 68, 0, 47, 54, 111, 19, 245, 230, 131, 146, 20, 164, 151, 217, 121, 227, 185, 254, 198, 142, 65 },
                            PasswordSalt = new byte[] { 240, 170, 87, 15, 126, 15, 202, 230, 128, 193, 58, 234, 146, 132, 107, 142, 145, 154, 155, 21, 7, 176, 152, 110, 107, 165, 36, 114, 85, 219, 180, 207, 181, 163, 5, 249, 182, 57, 146, 108, 7, 68, 112, 113, 14, 73, 81, 168, 109, 128, 115, 104, 192, 14, 84, 53, 157, 136, 249, 191, 141, 21, 93, 216, 80, 30, 3, 249, 48, 202, 97, 118, 154, 143, 108, 67, 132, 96, 184, 9, 62, 204, 245, 3, 110, 10, 64, 246, 63, 223, 111, 173, 100, 218, 28, 18, 181, 250, 144, 196, 153, 12, 11, 194, 87, 111, 204, 73, 79, 99, 178, 178, 208, 196, 243, 209, 54, 73, 161, 86, 239, 201, 191, 100, 131, 232, 146, 39 },
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Roger",
                            PasswordHash = new byte[] { 186, 122, 249, 45, 81, 194, 96, 245, 196, 146, 116, 254, 122, 32, 131, 81, 232, 75, 151, 58, 151, 143, 219, 105, 101, 29, 101, 5, 122, 123, 228, 13, 77, 39, 228, 104, 91, 229, 247, 80, 254, 249, 182, 68, 0, 47, 54, 111, 19, 245, 230, 131, 146, 20, 164, 151, 217, 121, 227, 185, 254, 198, 142, 65 },
                            PasswordSalt = new byte[] { 240, 170, 87, 15, 126, 15, 202, 230, 128, 193, 58, 234, 146, 132, 107, 142, 145, 154, 155, 21, 7, 176, 152, 110, 107, 165, 36, 114, 85, 219, 180, 207, 181, 163, 5, 249, 182, 57, 146, 108, 7, 68, 112, 113, 14, 73, 81, 168, 109, 128, 115, 104, 192, 14, 84, 53, 157, 136, 249, 191, 141, 21, 93, 216, 80, 30, 3, 249, 48, 202, 97, 118, 154, 143, 108, 67, 132, 96, 184, 9, 62, 204, 245, 3, 110, 10, 64, 246, 63, 223, 111, 173, 100, 218, 28, 18, 181, 250, 144, 196, 153, 12, 11, 194, 87, 111, 204, 73, 79, 99, 178, 178, 208, 196, 243, 209, 54, 73, 161, 86, 239, 201, 191, 100, 131, 232, 146, 39 },
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 10,
                            Name = "FireStick"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 20,
                            Name = "Axe"
                        },
                        new
                        {
                            Id = 3,
                            CharacterId = 3,
                            Damage = 20,
                            Name = "Sward"
                        });
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Character", b =>
                {
                    b.HasOne("BrowserTextRPG.Model.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.CharacterSkill", b =>
                {
                    b.HasOne("BrowserTextRPG.Model.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrowserTextRPG.Model.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.User", b =>
                {
                    b.HasOne("BrowserTextRPG.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Weapon", b =>
                {
                    b.HasOne("BrowserTextRPG.Model.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("BrowserTextRPG.Model.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("BrowserTextRPG.Model.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
